services:
  mongo-db:
    image: mongodb/mongodb-community-server:latest
    container_name: mongodb
    ports:
      - '27017:27017'

    environment:
      MONGO_INITDB_ROOT_USERNAME: username
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: fantasy
    volumes:
      - mongodata:/data/db
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: username
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo-db

    depends_on:
      - mongo-db
    networks:
      - mongo-network

  minio:
    image: quay.io/minio/minio
    container_name: minio1
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: username
      MINIO_ROOT_PASSWORD: password
    volumes:
      - C:/minio/data:/data
    command: server /data --console-address ":9001"

  postgres:
    image: postgres:15-alpine
    container_name: fantasy_writer_postgres
    environment:
      POSTGRES_DB: fantasy_writer_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  mongodata:
  postgres_data:
    name: fantasy_writer_postgres_data

networks:
  mongo-network:
    driver: bridge